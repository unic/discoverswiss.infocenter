<?php
/**
 * DsProduct
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infocenter\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infocenter-TEST-V2
 *
 * Infocenter API test-v2
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.20
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infocenter\Client\Model;

use \ArrayAccess;
use \Infocenter\Client\ObjectSerializer;

/**
 * DsProduct Class Doc Comment
 *
 * @category Class
 * @package  Infocenter\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DsProduct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Product';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'service' => 'string',
'seller' => '\Infocenter\Client\Model\DsLocalBusinessMember',
'variant' => '\Infocenter\Client\Model\DsProductVariant[]',
'photo' => '\Infocenter\Client\Model\DsImageObjectSimplex[]',
'category' => '\Infocenter\Client\Model\DsCategorySimplex[]',
'tag' => '\Infocenter\Client\Model\DsTagSimplex[]',
'campaign_tag' => '\Infocenter\Client\Model\DsTagSimplex[]',
'profile_tag' => '\Infocenter\Client\Model\DsTagSimplex[]',
'item_field' => '\Infocenter\Client\Model\DsFieldDefinition[]',
'guest_field' => '\Infocenter\Client\Model\DsFieldDefinition[]',
'price_information' => 'string',
'add_on_item' => '\Infocenter\Client\Model\DsProductAddOn[]',
'add_on_guest' => '\Infocenter\Client\Model\DsProductAddOn[]',
'in_language' => 'string[]',
'meeting_point' => '\Infocenter\Client\Model\DsGeoCoordinates[]',
'geo' => '\Infocenter\Client\Model\DsGeoCoordinates',
'geo_shape' => '\Infocenter\Client\Model\DsGeoShape',
'inclusions' => 'string[]',
'exclusions' => 'string[]',
'important_info' => 'string[]',
'detailed_information' => 'string[]',
'destination' => 'string',
'audio' => '\Infocenter\Client\Model\DsAudioObjectSimplex[]',
'video' => '\Infocenter\Client\Model\DsVideoObjectSimplex[]',
'potential_action' => '\Infocenter\Client\Model\DsAction[]',
'id' => 'string',
'identifier' => 'string',
'removed' => 'bool',
'data_governance' => '\Infocenter\Client\Model\DsDataGovernance',
'last_modified' => '\DateTime',
'available_data_language' => 'string[]',
'auto_translated_data' => 'bool',
'license' => 'string',
'alternate_name' => 'string',
'description' => 'string',
'disambiguating_description' => 'string',
'image' => '\Infocenter\Client\Model\DsImageObjectSimplex',
'same_as' => 'string',
'url' => 'string',
'additional_type' => 'string',
'link' => '\Infocenter\Client\Model\DsLink[]',
'name' => 'string',
'type' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'service' => null,
'seller' => null,
'variant' => null,
'photo' => null,
'category' => null,
'tag' => null,
'campaign_tag' => null,
'profile_tag' => null,
'item_field' => null,
'guest_field' => null,
'price_information' => null,
'add_on_item' => null,
'add_on_guest' => null,
'in_language' => null,
'meeting_point' => null,
'geo' => null,
'geo_shape' => null,
'inclusions' => null,
'exclusions' => null,
'important_info' => null,
'detailed_information' => null,
'destination' => null,
'audio' => null,
'video' => null,
'potential_action' => null,
'id' => null,
'identifier' => null,
'removed' => null,
'data_governance' => null,
'last_modified' => 'date-time',
'available_data_language' => null,
'auto_translated_data' => null,
'license' => null,
'alternate_name' => null,
'description' => null,
'disambiguating_description' => null,
'image' => null,
'same_as' => null,
'url' => null,
'additional_type' => null,
'link' => null,
'name' => null,
'type' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'service' => 'service',
'seller' => 'seller',
'variant' => 'variant',
'photo' => 'photo',
'category' => 'category',
'tag' => 'tag',
'campaign_tag' => 'campaignTag',
'profile_tag' => 'profileTag',
'item_field' => 'itemField',
'guest_field' => 'guestField',
'price_information' => 'priceInformation',
'add_on_item' => 'addOnItem',
'add_on_guest' => 'addOnGuest',
'in_language' => 'inLanguage',
'meeting_point' => 'meetingPoint',
'geo' => 'geo',
'geo_shape' => 'geoShape',
'inclusions' => 'inclusions',
'exclusions' => 'exclusions',
'important_info' => 'importantInfo',
'detailed_information' => 'detailedInformation',
'destination' => 'destination',
'audio' => 'audio',
'video' => 'video',
'potential_action' => 'potentialAction',
'id' => '@id',
'identifier' => 'identifier',
'removed' => 'removed',
'data_governance' => 'dataGovernance',
'last_modified' => 'lastModified',
'available_data_language' => 'availableDataLanguage',
'auto_translated_data' => 'autoTranslatedData',
'license' => 'license',
'alternate_name' => 'alternateName',
'description' => 'description',
'disambiguating_description' => 'disambiguatingDescription',
'image' => 'image',
'same_as' => 'sameAs',
'url' => 'url',
'additional_type' => 'additionalType',
'link' => 'link',
'name' => 'name',
'type' => 'type'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'service' => 'setService',
'seller' => 'setSeller',
'variant' => 'setVariant',
'photo' => 'setPhoto',
'category' => 'setCategory',
'tag' => 'setTag',
'campaign_tag' => 'setCampaignTag',
'profile_tag' => 'setProfileTag',
'item_field' => 'setItemField',
'guest_field' => 'setGuestField',
'price_information' => 'setPriceInformation',
'add_on_item' => 'setAddOnItem',
'add_on_guest' => 'setAddOnGuest',
'in_language' => 'setInLanguage',
'meeting_point' => 'setMeetingPoint',
'geo' => 'setGeo',
'geo_shape' => 'setGeoShape',
'inclusions' => 'setInclusions',
'exclusions' => 'setExclusions',
'important_info' => 'setImportantInfo',
'detailed_information' => 'setDetailedInformation',
'destination' => 'setDestination',
'audio' => 'setAudio',
'video' => 'setVideo',
'potential_action' => 'setPotentialAction',
'id' => 'setId',
'identifier' => 'setIdentifier',
'removed' => 'setRemoved',
'data_governance' => 'setDataGovernance',
'last_modified' => 'setLastModified',
'available_data_language' => 'setAvailableDataLanguage',
'auto_translated_data' => 'setAutoTranslatedData',
'license' => 'setLicense',
'alternate_name' => 'setAlternateName',
'description' => 'setDescription',
'disambiguating_description' => 'setDisambiguatingDescription',
'image' => 'setImage',
'same_as' => 'setSameAs',
'url' => 'setUrl',
'additional_type' => 'setAdditionalType',
'link' => 'setLink',
'name' => 'setName',
'type' => 'setType'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'service' => 'getService',
'seller' => 'getSeller',
'variant' => 'getVariant',
'photo' => 'getPhoto',
'category' => 'getCategory',
'tag' => 'getTag',
'campaign_tag' => 'getCampaignTag',
'profile_tag' => 'getProfileTag',
'item_field' => 'getItemField',
'guest_field' => 'getGuestField',
'price_information' => 'getPriceInformation',
'add_on_item' => 'getAddOnItem',
'add_on_guest' => 'getAddOnGuest',
'in_language' => 'getInLanguage',
'meeting_point' => 'getMeetingPoint',
'geo' => 'getGeo',
'geo_shape' => 'getGeoShape',
'inclusions' => 'getInclusions',
'exclusions' => 'getExclusions',
'important_info' => 'getImportantInfo',
'detailed_information' => 'getDetailedInformation',
'destination' => 'getDestination',
'audio' => 'getAudio',
'video' => 'getVideo',
'potential_action' => 'getPotentialAction',
'id' => 'getId',
'identifier' => 'getIdentifier',
'removed' => 'getRemoved',
'data_governance' => 'getDataGovernance',
'last_modified' => 'getLastModified',
'available_data_language' => 'getAvailableDataLanguage',
'auto_translated_data' => 'getAutoTranslatedData',
'license' => 'getLicense',
'alternate_name' => 'getAlternateName',
'description' => 'getDescription',
'disambiguating_description' => 'getDisambiguatingDescription',
'image' => 'getImage',
'same_as' => 'getSameAs',
'url' => 'getUrl',
'additional_type' => 'getAdditionalType',
'link' => 'getLink',
'name' => 'getName',
'type' => 'getType'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['service'] = isset($data['service']) ? $data['service'] : null;
        $this->container['seller'] = isset($data['seller']) ? $data['seller'] : null;
        $this->container['variant'] = isset($data['variant']) ? $data['variant'] : null;
        $this->container['photo'] = isset($data['photo']) ? $data['photo'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['tag'] = isset($data['tag']) ? $data['tag'] : null;
        $this->container['campaign_tag'] = isset($data['campaign_tag']) ? $data['campaign_tag'] : null;
        $this->container['profile_tag'] = isset($data['profile_tag']) ? $data['profile_tag'] : null;
        $this->container['item_field'] = isset($data['item_field']) ? $data['item_field'] : null;
        $this->container['guest_field'] = isset($data['guest_field']) ? $data['guest_field'] : null;
        $this->container['price_information'] = isset($data['price_information']) ? $data['price_information'] : null;
        $this->container['add_on_item'] = isset($data['add_on_item']) ? $data['add_on_item'] : null;
        $this->container['add_on_guest'] = isset($data['add_on_guest']) ? $data['add_on_guest'] : null;
        $this->container['in_language'] = isset($data['in_language']) ? $data['in_language'] : null;
        $this->container['meeting_point'] = isset($data['meeting_point']) ? $data['meeting_point'] : null;
        $this->container['geo'] = isset($data['geo']) ? $data['geo'] : null;
        $this->container['geo_shape'] = isset($data['geo_shape']) ? $data['geo_shape'] : null;
        $this->container['inclusions'] = isset($data['inclusions']) ? $data['inclusions'] : null;
        $this->container['exclusions'] = isset($data['exclusions']) ? $data['exclusions'] : null;
        $this->container['important_info'] = isset($data['important_info']) ? $data['important_info'] : null;
        $this->container['detailed_information'] = isset($data['detailed_information']) ? $data['detailed_information'] : null;
        $this->container['destination'] = isset($data['destination']) ? $data['destination'] : null;
        $this->container['audio'] = isset($data['audio']) ? $data['audio'] : null;
        $this->container['video'] = isset($data['video']) ? $data['video'] : null;
        $this->container['potential_action'] = isset($data['potential_action']) ? $data['potential_action'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['identifier'] = isset($data['identifier']) ? $data['identifier'] : null;
        $this->container['removed'] = isset($data['removed']) ? $data['removed'] : null;
        $this->container['data_governance'] = isset($data['data_governance']) ? $data['data_governance'] : null;
        $this->container['last_modified'] = isset($data['last_modified']) ? $data['last_modified'] : null;
        $this->container['available_data_language'] = isset($data['available_data_language']) ? $data['available_data_language'] : null;
        $this->container['auto_translated_data'] = isset($data['auto_translated_data']) ? $data['auto_translated_data'] : null;
        $this->container['license'] = isset($data['license']) ? $data['license'] : null;
        $this->container['alternate_name'] = isset($data['alternate_name']) ? $data['alternate_name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['disambiguating_description'] = isset($data['disambiguating_description']) ? $data['disambiguating_description'] : null;
        $this->container['image'] = isset($data['image']) ? $data['image'] : null;
        $this->container['same_as'] = isset($data['same_as']) ? $data['same_as'] : null;
        $this->container['url'] = isset($data['url']) ? $data['url'] : null;
        $this->container['additional_type'] = isset($data['additional_type']) ? $data['additional_type'] : null;
        $this->container['link'] = isset($data['link']) ? $data['link'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets service
     *
     * @return string
     */
    public function getService()
    {
        return $this->container['service'];
    }

    /**
     * Sets service
     *
     * @param string $service service
     *
     * @return $this
     */
    public function setService($service)
    {
        $this->container['service'] = $service;

        return $this;
    }

    /**
     * Gets seller
     *
     * @return \Infocenter\Client\Model\DsLocalBusinessMember
     */
    public function getSeller()
    {
        return $this->container['seller'];
    }

    /**
     * Sets seller
     *
     * @param \Infocenter\Client\Model\DsLocalBusinessMember $seller seller
     *
     * @return $this
     */
    public function setSeller($seller)
    {
        $this->container['seller'] = $seller;

        return $this;
    }

    /**
     * Gets variant
     *
     * @return \Infocenter\Client\Model\DsProductVariant[]
     */
    public function getVariant()
    {
        return $this->container['variant'];
    }

    /**
     * Sets variant
     *
     * @param \Infocenter\Client\Model\DsProductVariant[] $variant variant
     *
     * @return $this
     */
    public function setVariant($variant)
    {
        $this->container['variant'] = $variant;

        return $this;
    }

    /**
     * Gets photo
     *
     * @return \Infocenter\Client\Model\DsImageObjectSimplex[]
     */
    public function getPhoto()
    {
        return $this->container['photo'];
    }

    /**
     * Sets photo
     *
     * @param \Infocenter\Client\Model\DsImageObjectSimplex[] $photo photo
     *
     * @return $this
     */
    public function setPhoto($photo)
    {
        $this->container['photo'] = $photo;

        return $this;
    }

    /**
     * Gets category
     *
     * @return \Infocenter\Client\Model\DsCategorySimplex[]
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param \Infocenter\Client\Model\DsCategorySimplex[] $category category
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets tag
     *
     * @return \Infocenter\Client\Model\DsTagSimplex[]
     */
    public function getTag()
    {
        return $this->container['tag'];
    }

    /**
     * Sets tag
     *
     * @param \Infocenter\Client\Model\DsTagSimplex[] $tag tag
     *
     * @return $this
     */
    public function setTag($tag)
    {
        $this->container['tag'] = $tag;

        return $this;
    }

    /**
     * Gets campaign_tag
     *
     * @return \Infocenter\Client\Model\DsTagSimplex[]
     */
    public function getCampaignTag()
    {
        return $this->container['campaign_tag'];
    }

    /**
     * Sets campaign_tag
     *
     * @param \Infocenter\Client\Model\DsTagSimplex[] $campaign_tag campaign_tag
     *
     * @return $this
     */
    public function setCampaignTag($campaign_tag)
    {
        $this->container['campaign_tag'] = $campaign_tag;

        return $this;
    }

    /**
     * Gets profile_tag
     *
     * @return \Infocenter\Client\Model\DsTagSimplex[]
     */
    public function getProfileTag()
    {
        return $this->container['profile_tag'];
    }

    /**
     * Sets profile_tag
     *
     * @param \Infocenter\Client\Model\DsTagSimplex[] $profile_tag profile_tag
     *
     * @return $this
     */
    public function setProfileTag($profile_tag)
    {
        $this->container['profile_tag'] = $profile_tag;

        return $this;
    }

    /**
     * Gets item_field
     *
     * @return \Infocenter\Client\Model\DsFieldDefinition[]
     */
    public function getItemField()
    {
        return $this->container['item_field'];
    }

    /**
     * Sets item_field
     *
     * @param \Infocenter\Client\Model\DsFieldDefinition[] $item_field item_field
     *
     * @return $this
     */
    public function setItemField($item_field)
    {
        $this->container['item_field'] = $item_field;

        return $this;
    }

    /**
     * Gets guest_field
     *
     * @return \Infocenter\Client\Model\DsFieldDefinition[]
     */
    public function getGuestField()
    {
        return $this->container['guest_field'];
    }

    /**
     * Sets guest_field
     *
     * @param \Infocenter\Client\Model\DsFieldDefinition[] $guest_field guest_field
     *
     * @return $this
     */
    public function setGuestField($guest_field)
    {
        $this->container['guest_field'] = $guest_field;

        return $this;
    }

    /**
     * Gets price_information
     *
     * @return string
     */
    public function getPriceInformation()
    {
        return $this->container['price_information'];
    }

    /**
     * Sets price_information
     *
     * @param string $price_information price_information
     *
     * @return $this
     */
    public function setPriceInformation($price_information)
    {
        $this->container['price_information'] = $price_information;

        return $this;
    }

    /**
     * Gets add_on_item
     *
     * @return \Infocenter\Client\Model\DsProductAddOn[]
     */
    public function getAddOnItem()
    {
        return $this->container['add_on_item'];
    }

    /**
     * Sets add_on_item
     *
     * @param \Infocenter\Client\Model\DsProductAddOn[] $add_on_item add_on_item
     *
     * @return $this
     */
    public function setAddOnItem($add_on_item)
    {
        $this->container['add_on_item'] = $add_on_item;

        return $this;
    }

    /**
     * Gets add_on_guest
     *
     * @return \Infocenter\Client\Model\DsProductAddOn[]
     */
    public function getAddOnGuest()
    {
        return $this->container['add_on_guest'];
    }

    /**
     * Sets add_on_guest
     *
     * @param \Infocenter\Client\Model\DsProductAddOn[] $add_on_guest add_on_guest
     *
     * @return $this
     */
    public function setAddOnGuest($add_on_guest)
    {
        $this->container['add_on_guest'] = $add_on_guest;

        return $this;
    }

    /**
     * Gets in_language
     *
     * @return string[]
     */
    public function getInLanguage()
    {
        return $this->container['in_language'];
    }

    /**
     * Sets in_language
     *
     * @param string[] $in_language in_language
     *
     * @return $this
     */
    public function setInLanguage($in_language)
    {
        $this->container['in_language'] = $in_language;

        return $this;
    }

    /**
     * Gets meeting_point
     *
     * @return \Infocenter\Client\Model\DsGeoCoordinates[]
     */
    public function getMeetingPoint()
    {
        return $this->container['meeting_point'];
    }

    /**
     * Sets meeting_point
     *
     * @param \Infocenter\Client\Model\DsGeoCoordinates[] $meeting_point meeting_point
     *
     * @return $this
     */
    public function setMeetingPoint($meeting_point)
    {
        $this->container['meeting_point'] = $meeting_point;

        return $this;
    }

    /**
     * Gets geo
     *
     * @return \Infocenter\Client\Model\DsGeoCoordinates
     */
    public function getGeo()
    {
        return $this->container['geo'];
    }

    /**
     * Sets geo
     *
     * @param \Infocenter\Client\Model\DsGeoCoordinates $geo geo
     *
     * @return $this
     */
    public function setGeo($geo)
    {
        $this->container['geo'] = $geo;

        return $this;
    }

    /**
     * Gets geo_shape
     *
     * @return \Infocenter\Client\Model\DsGeoShape
     */
    public function getGeoShape()
    {
        return $this->container['geo_shape'];
    }

    /**
     * Sets geo_shape
     *
     * @param \Infocenter\Client\Model\DsGeoShape $geo_shape geo_shape
     *
     * @return $this
     */
    public function setGeoShape($geo_shape)
    {
        $this->container['geo_shape'] = $geo_shape;

        return $this;
    }

    /**
     * Gets inclusions
     *
     * @return string[]
     */
    public function getInclusions()
    {
        return $this->container['inclusions'];
    }

    /**
     * Sets inclusions
     *
     * @param string[] $inclusions inclusions
     *
     * @return $this
     */
    public function setInclusions($inclusions)
    {
        $this->container['inclusions'] = $inclusions;

        return $this;
    }

    /**
     * Gets exclusions
     *
     * @return string[]
     */
    public function getExclusions()
    {
        return $this->container['exclusions'];
    }

    /**
     * Sets exclusions
     *
     * @param string[] $exclusions exclusions
     *
     * @return $this
     */
    public function setExclusions($exclusions)
    {
        $this->container['exclusions'] = $exclusions;

        return $this;
    }

    /**
     * Gets important_info
     *
     * @return string[]
     */
    public function getImportantInfo()
    {
        return $this->container['important_info'];
    }

    /**
     * Sets important_info
     *
     * @param string[] $important_info important_info
     *
     * @return $this
     */
    public function setImportantInfo($important_info)
    {
        $this->container['important_info'] = $important_info;

        return $this;
    }

    /**
     * Gets detailed_information
     *
     * @return string[]
     */
    public function getDetailedInformation()
    {
        return $this->container['detailed_information'];
    }

    /**
     * Sets detailed_information
     *
     * @param string[] $detailed_information detailed_information
     *
     * @return $this
     */
    public function setDetailedInformation($detailed_information)
    {
        $this->container['detailed_information'] = $detailed_information;

        return $this;
    }

    /**
     * Gets destination
     *
     * @return string
     */
    public function getDestination()
    {
        return $this->container['destination'];
    }

    /**
     * Sets destination
     *
     * @param string $destination destination
     *
     * @return $this
     */
    public function setDestination($destination)
    {
        $this->container['destination'] = $destination;

        return $this;
    }

    /**
     * Gets audio
     *
     * @return \Infocenter\Client\Model\DsAudioObjectSimplex[]
     */
    public function getAudio()
    {
        return $this->container['audio'];
    }

    /**
     * Sets audio
     *
     * @param \Infocenter\Client\Model\DsAudioObjectSimplex[] $audio audio
     *
     * @return $this
     */
    public function setAudio($audio)
    {
        $this->container['audio'] = $audio;

        return $this;
    }

    /**
     * Gets video
     *
     * @return \Infocenter\Client\Model\DsVideoObjectSimplex[]
     */
    public function getVideo()
    {
        return $this->container['video'];
    }

    /**
     * Sets video
     *
     * @param \Infocenter\Client\Model\DsVideoObjectSimplex[] $video video
     *
     * @return $this
     */
    public function setVideo($video)
    {
        $this->container['video'] = $video;

        return $this;
    }

    /**
     * Gets potential_action
     *
     * @return \Infocenter\Client\Model\DsAction[]
     */
    public function getPotentialAction()
    {
        return $this->container['potential_action'];
    }

    /**
     * Sets potential_action
     *
     * @param \Infocenter\Client\Model\DsAction[] $potential_action potential_action
     *
     * @return $this
     */
    public function setPotentialAction($potential_action)
    {
        $this->container['potential_action'] = $potential_action;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets identifier
     *
     * @return string
     */
    public function getIdentifier()
    {
        return $this->container['identifier'];
    }

    /**
     * Sets identifier
     *
     * @param string $identifier identifier
     *
     * @return $this
     */
    public function setIdentifier($identifier)
    {
        $this->container['identifier'] = $identifier;

        return $this;
    }

    /**
     * Gets removed
     *
     * @return bool
     */
    public function getRemoved()
    {
        return $this->container['removed'];
    }

    /**
     * Sets removed
     *
     * @param bool $removed removed
     *
     * @return $this
     */
    public function setRemoved($removed)
    {
        $this->container['removed'] = $removed;

        return $this;
    }

    /**
     * Gets data_governance
     *
     * @return \Infocenter\Client\Model\DsDataGovernance
     */
    public function getDataGovernance()
    {
        return $this->container['data_governance'];
    }

    /**
     * Sets data_governance
     *
     * @param \Infocenter\Client\Model\DsDataGovernance $data_governance data_governance
     *
     * @return $this
     */
    public function setDataGovernance($data_governance)
    {
        $this->container['data_governance'] = $data_governance;

        return $this;
    }

    /**
     * Gets last_modified
     *
     * @return \DateTime
     */
    public function getLastModified()
    {
        return $this->container['last_modified'];
    }

    /**
     * Sets last_modified
     *
     * @param \DateTime $last_modified last_modified
     *
     * @return $this
     */
    public function setLastModified($last_modified)
    {
        $this->container['last_modified'] = $last_modified;

        return $this;
    }

    /**
     * Gets available_data_language
     *
     * @return string[]
     */
    public function getAvailableDataLanguage()
    {
        return $this->container['available_data_language'];
    }

    /**
     * Sets available_data_language
     *
     * @param string[] $available_data_language available_data_language
     *
     * @return $this
     */
    public function setAvailableDataLanguage($available_data_language)
    {
        $this->container['available_data_language'] = $available_data_language;

        return $this;
    }

    /**
     * Gets auto_translated_data
     *
     * @return bool
     */
    public function getAutoTranslatedData()
    {
        return $this->container['auto_translated_data'];
    }

    /**
     * Sets auto_translated_data
     *
     * @param bool $auto_translated_data auto_translated_data
     *
     * @return $this
     */
    public function setAutoTranslatedData($auto_translated_data)
    {
        $this->container['auto_translated_data'] = $auto_translated_data;

        return $this;
    }

    /**
     * Gets license
     *
     * @return string
     */
    public function getLicense()
    {
        return $this->container['license'];
    }

    /**
     * Sets license
     *
     * @param string $license license
     *
     * @return $this
     */
    public function setLicense($license)
    {
        $this->container['license'] = $license;

        return $this;
    }

    /**
     * Gets alternate_name
     *
     * @return string
     */
    public function getAlternateName()
    {
        return $this->container['alternate_name'];
    }

    /**
     * Sets alternate_name
     *
     * @param string $alternate_name alternate_name
     *
     * @return $this
     */
    public function setAlternateName($alternate_name)
    {
        $this->container['alternate_name'] = $alternate_name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets disambiguating_description
     *
     * @return string
     */
    public function getDisambiguatingDescription()
    {
        return $this->container['disambiguating_description'];
    }

    /**
     * Sets disambiguating_description
     *
     * @param string $disambiguating_description disambiguating_description
     *
     * @return $this
     */
    public function setDisambiguatingDescription($disambiguating_description)
    {
        $this->container['disambiguating_description'] = $disambiguating_description;

        return $this;
    }

    /**
     * Gets image
     *
     * @return \Infocenter\Client\Model\DsImageObjectSimplex
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param \Infocenter\Client\Model\DsImageObjectSimplex $image image
     *
     * @return $this
     */
    public function setImage($image)
    {
        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets same_as
     *
     * @return string
     */
    public function getSameAs()
    {
        return $this->container['same_as'];
    }

    /**
     * Sets same_as
     *
     * @param string $same_as same_as
     *
     * @return $this
     */
    public function setSameAs($same_as)
    {
        $this->container['same_as'] = $same_as;

        return $this;
    }

    /**
     * Gets url
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string $url url
     *
     * @return $this
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets additional_type
     *
     * @return string
     */
    public function getAdditionalType()
    {
        return $this->container['additional_type'];
    }

    /**
     * Sets additional_type
     *
     * @param string $additional_type additional_type
     *
     * @return $this
     */
    public function setAdditionalType($additional_type)
    {
        $this->container['additional_type'] = $additional_type;

        return $this;
    }

    /**
     * Gets link
     *
     * @return \Infocenter\Client\Model\DsLink[]
     */
    public function getLink()
    {
        return $this->container['link'];
    }

    /**
     * Sets link
     *
     * @param \Infocenter\Client\Model\DsLink[] $link link
     *
     * @return $this
     */
    public function setLink($link)
    {
        $this->container['link'] = $link;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
