<?php
/**
 * DsAdministrativeArea
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infocenter\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infocenter-TEST
 *
 * Infocenter-TEST
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.20
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infocenter\Client\Model;

use \ArrayAccess;
use \Infocenter\Client\ObjectSerializer;

/**
 * DsAdministrativeArea Class Doc Comment
 *
 * @category Class
 * @package  Infocenter\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DsAdministrativeArea implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AdministrativeArea';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'available_language' => 'string[]',
'address' => '\Infocenter\Client\Model\DsPostalAddress',
'fax_number' => 'string',
'geo' => '\Infocenter\Client\Model\DsGeoCoordinates',
'has_map' => 'string',
'is_accessible_for_free' => 'bool',
'maximum_attendee_capacity' => 'int',
'opening_hours_specification' => '\Infocenter\Client\Model\DsOpeningHoursSpecification[]',
'photo' => '\Infocenter\Client\Model\DsImageObjectSimplex[]',
'public_access' => 'bool',
'smoking_allowed' => 'bool',
'source' => '\Infocenter\Client\Model\DsPartnerSimplex',
'special_opening_hours_specification' => '\Infocenter\Client\Model\DsOpeningHoursSpecification[]',
'telephone' => 'string',
'tourist_type' => 'string',
'additional_property' => '\Infocenter\Client\Model\DsPropertyValue[]',
'geo_shape' => '\Infocenter\Client\Model\DsGeoShape',
'cc' => 'string',
'located' => 'string[]',
'copyright' => 'string',
'detailed_information' => 'string[]',
'title_teaser' => 'string',
'text_teaser' => 'string',
'public_transport' => 'string',
'getting_there' => 'string',
'parking' => 'string',
'directions' => 'string',
'fees' => 'string',
'zurichcard' => 'string',
'zurichcard_description' => 'string',
'osm_id' => 'string',
'aggregate_rating' => '\Infocenter\Client\Model\DsAggregateRating',
'opening_hours' => 'string',
'category' => '\Infocenter\Client\Model\DsCategorySimplex[]',
'contained_in_place' => '\Infocenter\Client\Model\DsPlaceSimplex[]',
'id' => 'string',
'identifier' => 'string',
'datasource' => 'string',
'data_governance' => '\Infocenter\Client\Model\DsDataGovernance',
'last_modified' => '\DateTime',
'available_data_language' => 'string[]',
'alternate_name' => 'string',
'description' => 'string',
'disambiguating_description' => 'string',
'image' => '\Infocenter\Client\Model\DsImageObjectSimplex',
'same_as' => 'string',
'url' => 'string',
'additional_type' => 'string',
'links' => '\Infocenter\Client\Model\DsLink[]',
'tag' => '\Infocenter\Client\Model\DsTagSimplex[]',
'name' => 'string',
'type' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'available_language' => null,
'address' => null,
'fax_number' => null,
'geo' => null,
'has_map' => null,
'is_accessible_for_free' => null,
'maximum_attendee_capacity' => 'int32',
'opening_hours_specification' => null,
'photo' => null,
'public_access' => null,
'smoking_allowed' => null,
'source' => null,
'special_opening_hours_specification' => null,
'telephone' => null,
'tourist_type' => null,
'additional_property' => null,
'geo_shape' => null,
'cc' => null,
'located' => null,
'copyright' => null,
'detailed_information' => null,
'title_teaser' => null,
'text_teaser' => null,
'public_transport' => null,
'getting_there' => null,
'parking' => null,
'directions' => null,
'fees' => null,
'zurichcard' => null,
'zurichcard_description' => null,
'osm_id' => null,
'aggregate_rating' => null,
'opening_hours' => null,
'category' => null,
'contained_in_place' => null,
'id' => null,
'identifier' => null,
'datasource' => null,
'data_governance' => null,
'last_modified' => 'date-time',
'available_data_language' => null,
'alternate_name' => null,
'description' => null,
'disambiguating_description' => null,
'image' => null,
'same_as' => null,
'url' => null,
'additional_type' => null,
'links' => null,
'tag' => null,
'name' => null,
'type' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'available_language' => 'availableLanguage',
'address' => 'address',
'fax_number' => 'faxNumber',
'geo' => 'geo',
'has_map' => 'hasMap',
'is_accessible_for_free' => 'isAccessibleForFree',
'maximum_attendee_capacity' => 'maximumAttendeeCapacity',
'opening_hours_specification' => 'openingHoursSpecification',
'photo' => 'photo',
'public_access' => 'publicAccess',
'smoking_allowed' => 'smokingAllowed',
'source' => 'source',
'special_opening_hours_specification' => 'specialOpeningHoursSpecification',
'telephone' => 'telephone',
'tourist_type' => 'touristType',
'additional_property' => 'additionalProperty',
'geo_shape' => 'geoShape',
'cc' => 'cc',
'located' => 'located',
'copyright' => 'copyright',
'detailed_information' => 'detailedInformation',
'title_teaser' => 'titleTeaser',
'text_teaser' => 'textTeaser',
'public_transport' => 'publicTransport',
'getting_there' => 'gettingThere',
'parking' => 'parking',
'directions' => 'directions',
'fees' => 'fees',
'zurichcard' => 'zurichcard',
'zurichcard_description' => 'zurichcardDescription',
'osm_id' => 'osm_id',
'aggregate_rating' => 'aggregateRating',
'opening_hours' => 'openingHours',
'category' => 'category',
'contained_in_place' => 'containedInPlace',
'id' => '@id',
'identifier' => 'identifier',
'datasource' => 'datasource',
'data_governance' => 'dataGovernance',
'last_modified' => 'lastModified',
'available_data_language' => 'availableDataLanguage',
'alternate_name' => 'alternateName',
'description' => 'description',
'disambiguating_description' => 'disambiguatingDescription',
'image' => 'image',
'same_as' => 'sameAs',
'url' => 'url',
'additional_type' => 'additionalType',
'links' => 'links',
'tag' => 'tag',
'name' => 'name',
'type' => 'type'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'available_language' => 'setAvailableLanguage',
'address' => 'setAddress',
'fax_number' => 'setFaxNumber',
'geo' => 'setGeo',
'has_map' => 'setHasMap',
'is_accessible_for_free' => 'setIsAccessibleForFree',
'maximum_attendee_capacity' => 'setMaximumAttendeeCapacity',
'opening_hours_specification' => 'setOpeningHoursSpecification',
'photo' => 'setPhoto',
'public_access' => 'setPublicAccess',
'smoking_allowed' => 'setSmokingAllowed',
'source' => 'setSource',
'special_opening_hours_specification' => 'setSpecialOpeningHoursSpecification',
'telephone' => 'setTelephone',
'tourist_type' => 'setTouristType',
'additional_property' => 'setAdditionalProperty',
'geo_shape' => 'setGeoShape',
'cc' => 'setCc',
'located' => 'setLocated',
'copyright' => 'setCopyright',
'detailed_information' => 'setDetailedInformation',
'title_teaser' => 'setTitleTeaser',
'text_teaser' => 'setTextTeaser',
'public_transport' => 'setPublicTransport',
'getting_there' => 'setGettingThere',
'parking' => 'setParking',
'directions' => 'setDirections',
'fees' => 'setFees',
'zurichcard' => 'setZurichcard',
'zurichcard_description' => 'setZurichcardDescription',
'osm_id' => 'setOsmId',
'aggregate_rating' => 'setAggregateRating',
'opening_hours' => 'setOpeningHours',
'category' => 'setCategory',
'contained_in_place' => 'setContainedInPlace',
'id' => 'setId',
'identifier' => 'setIdentifier',
'datasource' => 'setDatasource',
'data_governance' => 'setDataGovernance',
'last_modified' => 'setLastModified',
'available_data_language' => 'setAvailableDataLanguage',
'alternate_name' => 'setAlternateName',
'description' => 'setDescription',
'disambiguating_description' => 'setDisambiguatingDescription',
'image' => 'setImage',
'same_as' => 'setSameAs',
'url' => 'setUrl',
'additional_type' => 'setAdditionalType',
'links' => 'setLinks',
'tag' => 'setTag',
'name' => 'setName',
'type' => 'setType'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'available_language' => 'getAvailableLanguage',
'address' => 'getAddress',
'fax_number' => 'getFaxNumber',
'geo' => 'getGeo',
'has_map' => 'getHasMap',
'is_accessible_for_free' => 'getIsAccessibleForFree',
'maximum_attendee_capacity' => 'getMaximumAttendeeCapacity',
'opening_hours_specification' => 'getOpeningHoursSpecification',
'photo' => 'getPhoto',
'public_access' => 'getPublicAccess',
'smoking_allowed' => 'getSmokingAllowed',
'source' => 'getSource',
'special_opening_hours_specification' => 'getSpecialOpeningHoursSpecification',
'telephone' => 'getTelephone',
'tourist_type' => 'getTouristType',
'additional_property' => 'getAdditionalProperty',
'geo_shape' => 'getGeoShape',
'cc' => 'getCc',
'located' => 'getLocated',
'copyright' => 'getCopyright',
'detailed_information' => 'getDetailedInformation',
'title_teaser' => 'getTitleTeaser',
'text_teaser' => 'getTextTeaser',
'public_transport' => 'getPublicTransport',
'getting_there' => 'getGettingThere',
'parking' => 'getParking',
'directions' => 'getDirections',
'fees' => 'getFees',
'zurichcard' => 'getZurichcard',
'zurichcard_description' => 'getZurichcardDescription',
'osm_id' => 'getOsmId',
'aggregate_rating' => 'getAggregateRating',
'opening_hours' => 'getOpeningHours',
'category' => 'getCategory',
'contained_in_place' => 'getContainedInPlace',
'id' => 'getId',
'identifier' => 'getIdentifier',
'datasource' => 'getDatasource',
'data_governance' => 'getDataGovernance',
'last_modified' => 'getLastModified',
'available_data_language' => 'getAvailableDataLanguage',
'alternate_name' => 'getAlternateName',
'description' => 'getDescription',
'disambiguating_description' => 'getDisambiguatingDescription',
'image' => 'getImage',
'same_as' => 'getSameAs',
'url' => 'getUrl',
'additional_type' => 'getAdditionalType',
'links' => 'getLinks',
'tag' => 'getTag',
'name' => 'getName',
'type' => 'getType'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['available_language'] = isset($data['available_language']) ? $data['available_language'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['fax_number'] = isset($data['fax_number']) ? $data['fax_number'] : null;
        $this->container['geo'] = isset($data['geo']) ? $data['geo'] : null;
        $this->container['has_map'] = isset($data['has_map']) ? $data['has_map'] : null;
        $this->container['is_accessible_for_free'] = isset($data['is_accessible_for_free']) ? $data['is_accessible_for_free'] : null;
        $this->container['maximum_attendee_capacity'] = isset($data['maximum_attendee_capacity']) ? $data['maximum_attendee_capacity'] : null;
        $this->container['opening_hours_specification'] = isset($data['opening_hours_specification']) ? $data['opening_hours_specification'] : null;
        $this->container['photo'] = isset($data['photo']) ? $data['photo'] : null;
        $this->container['public_access'] = isset($data['public_access']) ? $data['public_access'] : null;
        $this->container['smoking_allowed'] = isset($data['smoking_allowed']) ? $data['smoking_allowed'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['special_opening_hours_specification'] = isset($data['special_opening_hours_specification']) ? $data['special_opening_hours_specification'] : null;
        $this->container['telephone'] = isset($data['telephone']) ? $data['telephone'] : null;
        $this->container['tourist_type'] = isset($data['tourist_type']) ? $data['tourist_type'] : null;
        $this->container['additional_property'] = isset($data['additional_property']) ? $data['additional_property'] : null;
        $this->container['geo_shape'] = isset($data['geo_shape']) ? $data['geo_shape'] : null;
        $this->container['cc'] = isset($data['cc']) ? $data['cc'] : null;
        $this->container['located'] = isset($data['located']) ? $data['located'] : null;
        $this->container['copyright'] = isset($data['copyright']) ? $data['copyright'] : null;
        $this->container['detailed_information'] = isset($data['detailed_information']) ? $data['detailed_information'] : null;
        $this->container['title_teaser'] = isset($data['title_teaser']) ? $data['title_teaser'] : null;
        $this->container['text_teaser'] = isset($data['text_teaser']) ? $data['text_teaser'] : null;
        $this->container['public_transport'] = isset($data['public_transport']) ? $data['public_transport'] : null;
        $this->container['getting_there'] = isset($data['getting_there']) ? $data['getting_there'] : null;
        $this->container['parking'] = isset($data['parking']) ? $data['parking'] : null;
        $this->container['directions'] = isset($data['directions']) ? $data['directions'] : null;
        $this->container['fees'] = isset($data['fees']) ? $data['fees'] : null;
        $this->container['zurichcard'] = isset($data['zurichcard']) ? $data['zurichcard'] : null;
        $this->container['zurichcard_description'] = isset($data['zurichcard_description']) ? $data['zurichcard_description'] : null;
        $this->container['osm_id'] = isset($data['osm_id']) ? $data['osm_id'] : null;
        $this->container['aggregate_rating'] = isset($data['aggregate_rating']) ? $data['aggregate_rating'] : null;
        $this->container['opening_hours'] = isset($data['opening_hours']) ? $data['opening_hours'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['contained_in_place'] = isset($data['contained_in_place']) ? $data['contained_in_place'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['identifier'] = isset($data['identifier']) ? $data['identifier'] : null;
        $this->container['datasource'] = isset($data['datasource']) ? $data['datasource'] : null;
        $this->container['data_governance'] = isset($data['data_governance']) ? $data['data_governance'] : null;
        $this->container['last_modified'] = isset($data['last_modified']) ? $data['last_modified'] : null;
        $this->container['available_data_language'] = isset($data['available_data_language']) ? $data['available_data_language'] : null;
        $this->container['alternate_name'] = isset($data['alternate_name']) ? $data['alternate_name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['disambiguating_description'] = isset($data['disambiguating_description']) ? $data['disambiguating_description'] : null;
        $this->container['image'] = isset($data['image']) ? $data['image'] : null;
        $this->container['same_as'] = isset($data['same_as']) ? $data['same_as'] : null;
        $this->container['url'] = isset($data['url']) ? $data['url'] : null;
        $this->container['additional_type'] = isset($data['additional_type']) ? $data['additional_type'] : null;
        $this->container['links'] = isset($data['links']) ? $data['links'] : null;
        $this->container['tag'] = isset($data['tag']) ? $data['tag'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets available_language
     *
     * @return string[]
     */
    public function getAvailableLanguage()
    {
        return $this->container['available_language'];
    }

    /**
     * Sets available_language
     *
     * @param string[] $available_language available_language
     *
     * @return $this
     */
    public function setAvailableLanguage($available_language)
    {
        $this->container['available_language'] = $available_language;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Infocenter\Client\Model\DsPostalAddress
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Infocenter\Client\Model\DsPostalAddress $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets fax_number
     *
     * @return string
     */
    public function getFaxNumber()
    {
        return $this->container['fax_number'];
    }

    /**
     * Sets fax_number
     *
     * @param string $fax_number fax_number
     *
     * @return $this
     */
    public function setFaxNumber($fax_number)
    {
        $this->container['fax_number'] = $fax_number;

        return $this;
    }

    /**
     * Gets geo
     *
     * @return \Infocenter\Client\Model\DsGeoCoordinates
     */
    public function getGeo()
    {
        return $this->container['geo'];
    }

    /**
     * Sets geo
     *
     * @param \Infocenter\Client\Model\DsGeoCoordinates $geo geo
     *
     * @return $this
     */
    public function setGeo($geo)
    {
        $this->container['geo'] = $geo;

        return $this;
    }

    /**
     * Gets has_map
     *
     * @return string
     */
    public function getHasMap()
    {
        return $this->container['has_map'];
    }

    /**
     * Sets has_map
     *
     * @param string $has_map has_map
     *
     * @return $this
     */
    public function setHasMap($has_map)
    {
        $this->container['has_map'] = $has_map;

        return $this;
    }

    /**
     * Gets is_accessible_for_free
     *
     * @return bool
     */
    public function getIsAccessibleForFree()
    {
        return $this->container['is_accessible_for_free'];
    }

    /**
     * Sets is_accessible_for_free
     *
     * @param bool $is_accessible_for_free is_accessible_for_free
     *
     * @return $this
     */
    public function setIsAccessibleForFree($is_accessible_for_free)
    {
        $this->container['is_accessible_for_free'] = $is_accessible_for_free;

        return $this;
    }

    /**
     * Gets maximum_attendee_capacity
     *
     * @return int
     */
    public function getMaximumAttendeeCapacity()
    {
        return $this->container['maximum_attendee_capacity'];
    }

    /**
     * Sets maximum_attendee_capacity
     *
     * @param int $maximum_attendee_capacity maximum_attendee_capacity
     *
     * @return $this
     */
    public function setMaximumAttendeeCapacity($maximum_attendee_capacity)
    {
        $this->container['maximum_attendee_capacity'] = $maximum_attendee_capacity;

        return $this;
    }

    /**
     * Gets opening_hours_specification
     *
     * @return \Infocenter\Client\Model\DsOpeningHoursSpecification[]
     */
    public function getOpeningHoursSpecification()
    {
        return $this->container['opening_hours_specification'];
    }

    /**
     * Sets opening_hours_specification
     *
     * @param \Infocenter\Client\Model\DsOpeningHoursSpecification[] $opening_hours_specification opening_hours_specification
     *
     * @return $this
     */
    public function setOpeningHoursSpecification($opening_hours_specification)
    {
        $this->container['opening_hours_specification'] = $opening_hours_specification;

        return $this;
    }

    /**
     * Gets photo
     *
     * @return \Infocenter\Client\Model\DsImageObjectSimplex[]
     */
    public function getPhoto()
    {
        return $this->container['photo'];
    }

    /**
     * Sets photo
     *
     * @param \Infocenter\Client\Model\DsImageObjectSimplex[] $photo photo
     *
     * @return $this
     */
    public function setPhoto($photo)
    {
        $this->container['photo'] = $photo;

        return $this;
    }

    /**
     * Gets public_access
     *
     * @return bool
     */
    public function getPublicAccess()
    {
        return $this->container['public_access'];
    }

    /**
     * Sets public_access
     *
     * @param bool $public_access public_access
     *
     * @return $this
     */
    public function setPublicAccess($public_access)
    {
        $this->container['public_access'] = $public_access;

        return $this;
    }

    /**
     * Gets smoking_allowed
     *
     * @return bool
     */
    public function getSmokingAllowed()
    {
        return $this->container['smoking_allowed'];
    }

    /**
     * Sets smoking_allowed
     *
     * @param bool $smoking_allowed smoking_allowed
     *
     * @return $this
     */
    public function setSmokingAllowed($smoking_allowed)
    {
        $this->container['smoking_allowed'] = $smoking_allowed;

        return $this;
    }

    /**
     * Gets source
     *
     * @return \Infocenter\Client\Model\DsPartnerSimplex
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param \Infocenter\Client\Model\DsPartnerSimplex $source source
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets special_opening_hours_specification
     *
     * @return \Infocenter\Client\Model\DsOpeningHoursSpecification[]
     */
    public function getSpecialOpeningHoursSpecification()
    {
        return $this->container['special_opening_hours_specification'];
    }

    /**
     * Sets special_opening_hours_specification
     *
     * @param \Infocenter\Client\Model\DsOpeningHoursSpecification[] $special_opening_hours_specification special_opening_hours_specification
     *
     * @return $this
     */
    public function setSpecialOpeningHoursSpecification($special_opening_hours_specification)
    {
        $this->container['special_opening_hours_specification'] = $special_opening_hours_specification;

        return $this;
    }

    /**
     * Gets telephone
     *
     * @return string
     */
    public function getTelephone()
    {
        return $this->container['telephone'];
    }

    /**
     * Sets telephone
     *
     * @param string $telephone telephone
     *
     * @return $this
     */
    public function setTelephone($telephone)
    {
        $this->container['telephone'] = $telephone;

        return $this;
    }

    /**
     * Gets tourist_type
     *
     * @return string
     */
    public function getTouristType()
    {
        return $this->container['tourist_type'];
    }

    /**
     * Sets tourist_type
     *
     * @param string $tourist_type tourist_type
     *
     * @return $this
     */
    public function setTouristType($tourist_type)
    {
        $this->container['tourist_type'] = $tourist_type;

        return $this;
    }

    /**
     * Gets additional_property
     *
     * @return \Infocenter\Client\Model\DsPropertyValue[]
     */
    public function getAdditionalProperty()
    {
        return $this->container['additional_property'];
    }

    /**
     * Sets additional_property
     *
     * @param \Infocenter\Client\Model\DsPropertyValue[] $additional_property additional_property
     *
     * @return $this
     */
    public function setAdditionalProperty($additional_property)
    {
        $this->container['additional_property'] = $additional_property;

        return $this;
    }

    /**
     * Gets geo_shape
     *
     * @return \Infocenter\Client\Model\DsGeoShape
     */
    public function getGeoShape()
    {
        return $this->container['geo_shape'];
    }

    /**
     * Sets geo_shape
     *
     * @param \Infocenter\Client\Model\DsGeoShape $geo_shape geo_shape
     *
     * @return $this
     */
    public function setGeoShape($geo_shape)
    {
        $this->container['geo_shape'] = $geo_shape;

        return $this;
    }

    /**
     * Gets cc
     *
     * @return string
     */
    public function getCc()
    {
        return $this->container['cc'];
    }

    /**
     * Sets cc
     *
     * @param string $cc cc
     *
     * @return $this
     */
    public function setCc($cc)
    {
        $this->container['cc'] = $cc;

        return $this;
    }

    /**
     * Gets located
     *
     * @return string[]
     */
    public function getLocated()
    {
        return $this->container['located'];
    }

    /**
     * Sets located
     *
     * @param string[] $located located
     *
     * @return $this
     */
    public function setLocated($located)
    {
        $this->container['located'] = $located;

        return $this;
    }

    /**
     * Gets copyright
     *
     * @return string
     */
    public function getCopyright()
    {
        return $this->container['copyright'];
    }

    /**
     * Sets copyright
     *
     * @param string $copyright copyright
     *
     * @return $this
     */
    public function setCopyright($copyright)
    {
        $this->container['copyright'] = $copyright;

        return $this;
    }

    /**
     * Gets detailed_information
     *
     * @return string[]
     */
    public function getDetailedInformation()
    {
        return $this->container['detailed_information'];
    }

    /**
     * Sets detailed_information
     *
     * @param string[] $detailed_information detailed_information
     *
     * @return $this
     */
    public function setDetailedInformation($detailed_information)
    {
        $this->container['detailed_information'] = $detailed_information;

        return $this;
    }

    /**
     * Gets title_teaser
     *
     * @return string
     */
    public function getTitleTeaser()
    {
        return $this->container['title_teaser'];
    }

    /**
     * Sets title_teaser
     *
     * @param string $title_teaser title_teaser
     *
     * @return $this
     */
    public function setTitleTeaser($title_teaser)
    {
        $this->container['title_teaser'] = $title_teaser;

        return $this;
    }

    /**
     * Gets text_teaser
     *
     * @return string
     */
    public function getTextTeaser()
    {
        return $this->container['text_teaser'];
    }

    /**
     * Sets text_teaser
     *
     * @param string $text_teaser text_teaser
     *
     * @return $this
     */
    public function setTextTeaser($text_teaser)
    {
        $this->container['text_teaser'] = $text_teaser;

        return $this;
    }

    /**
     * Gets public_transport
     *
     * @return string
     */
    public function getPublicTransport()
    {
        return $this->container['public_transport'];
    }

    /**
     * Sets public_transport
     *
     * @param string $public_transport public_transport
     *
     * @return $this
     */
    public function setPublicTransport($public_transport)
    {
        $this->container['public_transport'] = $public_transport;

        return $this;
    }

    /**
     * Gets getting_there
     *
     * @return string
     */
    public function getGettingThere()
    {
        return $this->container['getting_there'];
    }

    /**
     * Sets getting_there
     *
     * @param string $getting_there getting_there
     *
     * @return $this
     */
    public function setGettingThere($getting_there)
    {
        $this->container['getting_there'] = $getting_there;

        return $this;
    }

    /**
     * Gets parking
     *
     * @return string
     */
    public function getParking()
    {
        return $this->container['parking'];
    }

    /**
     * Sets parking
     *
     * @param string $parking parking
     *
     * @return $this
     */
    public function setParking($parking)
    {
        $this->container['parking'] = $parking;

        return $this;
    }

    /**
     * Gets directions
     *
     * @return string
     */
    public function getDirections()
    {
        return $this->container['directions'];
    }

    /**
     * Sets directions
     *
     * @param string $directions directions
     *
     * @return $this
     */
    public function setDirections($directions)
    {
        $this->container['directions'] = $directions;

        return $this;
    }

    /**
     * Gets fees
     *
     * @return string
     */
    public function getFees()
    {
        return $this->container['fees'];
    }

    /**
     * Sets fees
     *
     * @param string $fees fees
     *
     * @return $this
     */
    public function setFees($fees)
    {
        $this->container['fees'] = $fees;

        return $this;
    }

    /**
     * Gets zurichcard
     *
     * @return string
     */
    public function getZurichcard()
    {
        return $this->container['zurichcard'];
    }

    /**
     * Sets zurichcard
     *
     * @param string $zurichcard zurichcard
     *
     * @return $this
     */
    public function setZurichcard($zurichcard)
    {
        $this->container['zurichcard'] = $zurichcard;

        return $this;
    }

    /**
     * Gets zurichcard_description
     *
     * @return string
     */
    public function getZurichcardDescription()
    {
        return $this->container['zurichcard_description'];
    }

    /**
     * Sets zurichcard_description
     *
     * @param string $zurichcard_description zurichcard_description
     *
     * @return $this
     */
    public function setZurichcardDescription($zurichcard_description)
    {
        $this->container['zurichcard_description'] = $zurichcard_description;

        return $this;
    }

    /**
     * Gets osm_id
     *
     * @return string
     */
    public function getOsmId()
    {
        return $this->container['osm_id'];
    }

    /**
     * Sets osm_id
     *
     * @param string $osm_id osm_id
     *
     * @return $this
     */
    public function setOsmId($osm_id)
    {
        $this->container['osm_id'] = $osm_id;

        return $this;
    }

    /**
     * Gets aggregate_rating
     *
     * @return \Infocenter\Client\Model\DsAggregateRating
     */
    public function getAggregateRating()
    {
        return $this->container['aggregate_rating'];
    }

    /**
     * Sets aggregate_rating
     *
     * @param \Infocenter\Client\Model\DsAggregateRating $aggregate_rating aggregate_rating
     *
     * @return $this
     */
    public function setAggregateRating($aggregate_rating)
    {
        $this->container['aggregate_rating'] = $aggregate_rating;

        return $this;
    }

    /**
     * Gets opening_hours
     *
     * @return string
     */
    public function getOpeningHours()
    {
        return $this->container['opening_hours'];
    }

    /**
     * Sets opening_hours
     *
     * @param string $opening_hours opening_hours
     *
     * @return $this
     */
    public function setOpeningHours($opening_hours)
    {
        $this->container['opening_hours'] = $opening_hours;

        return $this;
    }

    /**
     * Gets category
     *
     * @return \Infocenter\Client\Model\DsCategorySimplex[]
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param \Infocenter\Client\Model\DsCategorySimplex[] $category category
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets contained_in_place
     *
     * @return \Infocenter\Client\Model\DsPlaceSimplex[]
     */
    public function getContainedInPlace()
    {
        return $this->container['contained_in_place'];
    }

    /**
     * Sets contained_in_place
     *
     * @param \Infocenter\Client\Model\DsPlaceSimplex[] $contained_in_place contained_in_place
     *
     * @return $this
     */
    public function setContainedInPlace($contained_in_place)
    {
        $this->container['contained_in_place'] = $contained_in_place;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets identifier
     *
     * @return string
     */
    public function getIdentifier()
    {
        return $this->container['identifier'];
    }

    /**
     * Sets identifier
     *
     * @param string $identifier identifier
     *
     * @return $this
     */
    public function setIdentifier($identifier)
    {
        $this->container['identifier'] = $identifier;

        return $this;
    }

    /**
     * Gets datasource
     *
     * @return string
     */
    public function getDatasource()
    {
        return $this->container['datasource'];
    }

    /**
     * Sets datasource
     *
     * @param string $datasource datasource
     *
     * @return $this
     */
    public function setDatasource($datasource)
    {
        $this->container['datasource'] = $datasource;

        return $this;
    }

    /**
     * Gets data_governance
     *
     * @return \Infocenter\Client\Model\DsDataGovernance
     */
    public function getDataGovernance()
    {
        return $this->container['data_governance'];
    }

    /**
     * Sets data_governance
     *
     * @param \Infocenter\Client\Model\DsDataGovernance $data_governance data_governance
     *
     * @return $this
     */
    public function setDataGovernance($data_governance)
    {
        $this->container['data_governance'] = $data_governance;

        return $this;
    }

    /**
     * Gets last_modified
     *
     * @return \DateTime
     */
    public function getLastModified()
    {
        return $this->container['last_modified'];
    }

    /**
     * Sets last_modified
     *
     * @param \DateTime $last_modified last_modified
     *
     * @return $this
     */
    public function setLastModified($last_modified)
    {
        $this->container['last_modified'] = $last_modified;

        return $this;
    }

    /**
     * Gets available_data_language
     *
     * @return string[]
     */
    public function getAvailableDataLanguage()
    {
        return $this->container['available_data_language'];
    }

    /**
     * Sets available_data_language
     *
     * @param string[] $available_data_language available_data_language
     *
     * @return $this
     */
    public function setAvailableDataLanguage($available_data_language)
    {
        $this->container['available_data_language'] = $available_data_language;

        return $this;
    }

    /**
     * Gets alternate_name
     *
     * @return string
     */
    public function getAlternateName()
    {
        return $this->container['alternate_name'];
    }

    /**
     * Sets alternate_name
     *
     * @param string $alternate_name alternate_name
     *
     * @return $this
     */
    public function setAlternateName($alternate_name)
    {
        $this->container['alternate_name'] = $alternate_name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets disambiguating_description
     *
     * @return string
     */
    public function getDisambiguatingDescription()
    {
        return $this->container['disambiguating_description'];
    }

    /**
     * Sets disambiguating_description
     *
     * @param string $disambiguating_description disambiguating_description
     *
     * @return $this
     */
    public function setDisambiguatingDescription($disambiguating_description)
    {
        $this->container['disambiguating_description'] = $disambiguating_description;

        return $this;
    }

    /**
     * Gets image
     *
     * @return \Infocenter\Client\Model\DsImageObjectSimplex
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param \Infocenter\Client\Model\DsImageObjectSimplex $image image
     *
     * @return $this
     */
    public function setImage($image)
    {
        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets same_as
     *
     * @return string
     */
    public function getSameAs()
    {
        return $this->container['same_as'];
    }

    /**
     * Sets same_as
     *
     * @param string $same_as same_as
     *
     * @return $this
     */
    public function setSameAs($same_as)
    {
        $this->container['same_as'] = $same_as;

        return $this;
    }

    /**
     * Gets url
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string $url url
     *
     * @return $this
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets additional_type
     *
     * @return string
     */
    public function getAdditionalType()
    {
        return $this->container['additional_type'];
    }

    /**
     * Sets additional_type
     *
     * @param string $additional_type additional_type
     *
     * @return $this
     */
    public function setAdditionalType($additional_type)
    {
        $this->container['additional_type'] = $additional_type;

        return $this;
    }

    /**
     * Gets links
     *
     * @return \Infocenter\Client\Model\DsLink[]
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param \Infocenter\Client\Model\DsLink[] $links links
     *
     * @return $this
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets tag
     *
     * @return \Infocenter\Client\Model\DsTagSimplex[]
     */
    public function getTag()
    {
        return $this->container['tag'];
    }

    /**
     * Sets tag
     *
     * @param \Infocenter\Client\Model\DsTagSimplex[] $tag tag
     *
     * @return $this
     */
    public function setTag($tag)
    {
        $this->container['tag'] = $tag;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
